name: Dashboard Update

on:
  workflow_run:
    workflows: ["Continuous Monitoring"]
    types:
      - completed

jobs:
  update-dashboard:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download monitoring artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });
            
            const matchArtifact = artifacts.data.artifacts.find(
              artifact => artifact.name.includes("monitoring-results")
            );
            
            if (!matchArtifact) {
              core.setFailed('No monitoring results artifact found');
              return;
            }
            
            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip'
            });
            
            const fs = require('fs');
            fs.writeFileSync('${{ github.workspace }}/monitoring-results.zip', Buffer.from(download.data));
      
      - name: Unzip monitoring results
        run: unzip -o monitoring-results.zip -d monitoring-data
      
      - name: Process monitoring data
        run: |
          echo "Processing monitoring data for dashboard update..."
          # In a real implementation, this would:
          # 1. Parse the JSON metrics files
          # 2. Update a database or data store with the metrics
          # 3. Generate updated dashboard visualizations
          
          # For now, just copy the dashboard template to a "deployed" location
          cp monitoring-dashboard.html dashboard/index.html
      
      - name: Deploy dashboard update
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dashboard
          branch: gh-pages
          target-folder: monitoring-dashboard

      - name: Notify dashboard update
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ci-cd-notifications
          SLACK_COLOR: good
          SLACK_ICON: https://github.com/saketmishra7224.png?size=48
          SLACK_TITLE: 'Monitoring Dashboard Updated'
          SLACK_MESSAGE: 'The monitoring dashboard has been updated with new data. View it at https://saketmishra7224.github.io/CI-CD/monitoring-dashboard/'
          SLACK_USERNAME: GitHub Actions
        continue-on-error: true
